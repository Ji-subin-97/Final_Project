<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.kjl.fp.payment.PaymentMapper">
  	
  	<!-- 결제 후 결제 정보 가져오기 -->
  	<select id="selectPaymentOne" parameterType="PaymentInfoVO" resultType="PaymentInfoVO">
  		SELECT
  			payment_type,
  			payment_date,
  			payment_price
  		FROM
  			payment
  		WHERE
  			payment_id = #{payment_id}	
  	</select>
  	
  	<!-- 해당 결제번호의 아이템 리스트 가져오기 -->
  	<select id="selectPaymentItem" parameterType="PaymentInfoVO" resultType="PaymentItemListVO">
  		SELECT *
  		FROM
  			payment_item
  		WHERE
  			payment_id = #{payment_id}
  	</select>
  	
  	<!-- 스탬프 갯수 가져오기 -->
  	<select id="selectStampCount" parameterType="String" resultType="Integer">
  		SELECT
  			count(userName)
  		FROM
  			stamp
  		WHERE
  			userName = #{userName}
  	</select>
  	
  	<!-- 기본 결제 정보 저장 -->
  	<insert id="insertPaymentInfo" parameterType="PaymentInfoVO" useGeneratedKeys="true" keyProperty="payment_id">
  		INSERT INTO
  			payment	(payment_id, payment_type, userName, payment_date, payment_price)
  		VALUES
  			(null, #{payment_type}, #{userName}, DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'), #{payment_price})
  	</insert>
  	
  	<!-- 카드 결제 정보 저장 -->
  	<insert id="insertPaymentCard" parameterType="PaymentCardVO">
  		INSERT INTO
  			payment_card (id, payment_id, card_kind, card_number, card_date, card_cvc)
  		VALUES
  			(null, #{payment_id}, #{card_kind}, #{card_number}, #{card_date}, #{card_cvc})
  	</insert>
  	
  	<!-- 결제 아이템 리스트 저장 -->
  	<insert id="insertPaymentItem" parameterType="PaymentItemListVO">
  		INSERT INTO
  			payment_item (list_id, payment_id, pdNum, pdName, pdPrice, pdCnt)
  		VALUES
  			(null, #{payment_id}, #{pdNum}, #{pdName}, #{pdPrice}, #{pdCnt})
  	</insert>
  	
  	<!-- 상품 갯수만큼 스탬프 넣기 -->
  	<insert id="insertStamp" parameterType="String">
  		INSERT INTO
  			stamp (userName, stampDate, validity)
  		VALUES
  			(#{userName}, SYSDATE(), DATE_ADD(NOW(), INTERVAL 1 YEAR));
  	</insert>
  	
  	<!-- 이벤트 쿠폰 발급하기 -->
  	<insert id="insertEventCoupon" parameterType="CmVO">
  		INSERT INTO
  			member_coupon (couponNum, userName, used)
  		VALUES
  			(#{couponNum}, #{userName}, 0)
  	</insert>
  	
  	<!-- 스탬프 초기화 시키기 -->
  	<delete id="deleteAllStamp" parameterType="String">
  		DELETE
  		FROM
  			stamp
  		WHERE
  			userName = #{userName}
  	</delete>
  	
  	<!-- 결제 후 장바구니에서 삭제 -->
  	<delete id="deletePaymentAfter" parameterType="CartVO">
  		DELETE FROM
  			cart
  		WHERE
  			cart_id = #{cart_id}
  	</delete>
  	
  </mapper>